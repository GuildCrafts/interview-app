ShallowWrapper {
  root:
   ShallowWrapper {
     root: [Circular],
     unrendered:
      { '$$typeof': Symbol(react.element),
        type: [Function: Header],
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} },
     renderer:
      ReactShallowRenderer {
        _instance: [Object],
        render: [Function: render],
        getRenderOutput: [Function: getRenderOutput] },
     node:
      { '$$typeof': Symbol(react.element),
        type: 'div',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} },
     nodes: [ [Object] ],
     length: 1,
     options: {},
     complexSelector:
      ComplexSelector {
        buildPredicate: [Function: buildPredicate],
        findWhereUnwrapped: [Function: findWhereUnwrapped],
        childrenOfNode: [Function: childrenOfNode] } },
  unrendered: null,
  renderer: null,
  node:
   { '$$typeof': Symbol(react.element),
     type: 'div',
     key: null,
     ref: null,
     props:
      { id: 'offcanvas-nav-primary',
        'data-uk-offcanvas': 'overlay: false',
        children: [Object] },
     _owner: null,
     _store: {} },
  nodes:
   [ { '$$typeof': Symbol(react.element),
       type: 'div',
       key: null,
       ref: null,
       props: [Object],
       _owner: null,
       _store: {} } ],
  length: 1,
  options: {},
  complexSelector:
   ComplexSelector {
     buildPredicate: [Function: buildPredicate],
     findWhereUnwrapped: [Function: findWhereUnwrapped],
     childrenOfNode: [Function: childrenOfNode] } }
